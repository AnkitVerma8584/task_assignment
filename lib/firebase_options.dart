// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
      apiKey: 'AIzaSyBNnCCLBesaB8Z91-R3sD_3jOJtTVJgiM4',
      appId: '1:1022185698524:web:b914048abad04f83d9b019',
      messagingSenderId: '1022185698524',
      projectId: 'black-coffer-6ae4f',
      authDomain: 'black-coffer-6ae4f.firebaseapp.com',
      storageBucket: 'black-coffer-6ae4f.appspot.com',
      measurementId: "G-3XBVGVNB3N");
  /*// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
import { getAnalytics } from "firebase/analytics";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
  apiKey: "AIzaSyBNnCCLBesaB8Z91-R3sD_3jOJtTVJgiM4",
  authDomain: "black-coffer-6ae4f.firebaseapp.com",
  projectId: "black-coffer-6ae4f",
  storageBucket: "black-coffer-6ae4f.appspot.com",
  messagingSenderId: "1022185698524",
  appId: "1:1022185698524:web:b914048abad04f83d9b019",
  measurementId: "G-3XBVGVNB3N"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const analytics = getAnalytics(app); */

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyANpH2CGi7hzVRRv9YwPE9yVb_H9bo_8xQ',
    appId: '1:1022185698524:android:cc454bcf03f9585ed9b019',
    messagingSenderId: '1022185698524',
    projectId: 'black-coffer-6ae4f',
    storageBucket: 'black-coffer-6ae4f.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyB8DWajz4nCRxnKh8wk8GPTgx1z8jNuzaY',
    appId: '1:1022185698524:ios:9890b55128b74afcd9b019',
    messagingSenderId: '1022185698524',
    projectId: 'black-coffer-6ae4f',
    storageBucket: 'black-coffer-6ae4f.appspot.com',
    iosClientId:
        '1022185698524-rgk13se68hikjo024j1g10jav8lvlggn.apps.googleusercontent.com',
    iosBundleId: 'com.example.blackCoffer',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyB8DWajz4nCRxnKh8wk8GPTgx1z8jNuzaY',
    appId: '1:1022185698524:ios:4cc60a6a7ae86099d9b019',
    messagingSenderId: '1022185698524',
    projectId: 'black-coffer-6ae4f',
    storageBucket: 'black-coffer-6ae4f.appspot.com',
    iosClientId:
        '1022185698524-hql0o6k0us02bisae81sii8gtpvjna5t.apps.googleusercontent.com',
    iosBundleId: 'com.example.blackCoffer.RunnerTests',
  );
}
